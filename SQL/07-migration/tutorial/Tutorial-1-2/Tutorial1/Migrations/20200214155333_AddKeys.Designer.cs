// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tutorial1.DAL;

namespace Tutorial1.Migrations
{
    [DbContext(typeof(AgreemantContext))]
    [Migration("20200214155333_AddKeys")]
    partial class AddKeys
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tutorial1.Models.Agreemant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAgree")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Agreemant");
                });

            modelBuilder.Entity("Tutorial1.Models.AgreemantUniversity", b =>
                {
                    b.Property<int>("AgreemantId")
                        .HasColumnType("int");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("AgreemantId", "UniversityId");

                    b.HasIndex("UniversityId");

                    b.ToTable("AgreemantUniversity");
                });

            modelBuilder.Entity("Tutorial1.Models.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("University");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ivane Javakhishvili Tbilisi State University"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tbilisi Independent University"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tbilisi State Medical University"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Caucasus University"
                        });
                });

            modelBuilder.Entity("Tutorial1.Models.AgreemantUniversity", b =>
                {
                    b.HasOne("Tutorial1.Models.University", "University")
                        .WithMany("AgreemantUniversities")
                        .HasForeignKey("AgreemantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tutorial1.Models.Agreemant", "Agreemant")
                        .WithMany("AgreemantUniversities")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
